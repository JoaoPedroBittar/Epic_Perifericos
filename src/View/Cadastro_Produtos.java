package View;

import Model.Teclado;
import Model.Fone_de_Ouvido;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.time.LocalDate;
import java.sql.SQLException;
import View.Mensagens;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import java.time.format.DateTimeFormatter;


public class Cadastro_Produtos extends javax.swing.JFrame {

    private Fone_de_Ouvido objFone; //Cria vinculo com o Fone
    private Teclado objTeclado;

    
    public Cadastro_Produtos() {
        initComponents();
        this.objFone = new Fone_de_Ouvido(); //Cria um vinculo e carrega objeto vazio de Fone de Ouvido
        this.objTeclado = new Teclado();
        addTipoActionListener();
        updateVisibility();
    }

     private void addTipoActionListener() {
        c_tipo.addActionListener(new ActionListener() {
//            @Override
            public void actionPerformed(ActionEvent e) {
                updateVisibility(); // Atualiza a visibilidade dos componentes quando o tipo é alterado
            }
        });
    }
    
    private void updateVisibility() {
        if (c_tipo.getSelectedItem().toString().equals("Teclado")) {
            jLabel11.setVisible(false); // Esconde o JLabel
            c_conectividade.setVisible(false); // Esconde o JComboBox
            jLabel12.setVisible(false);
            c_material.setVisible(false);
            jLabel14.setVisible(false);
            jLabel13.setVisible(true);
            c_conectividade_teclado.setVisible(true);
            jLabel15.setVisible(true);
            c_dimensao.setVisible(true);
            jLabel2.setVisible(true);
        } else if (c_tipo.getSelectedItem().toString().equals("Fone de Ouvido")) {
            jLabel11.setVisible(true); // Mostra o JLabel
            c_conectividade.setVisible(true); // Mostra o JComboBox
            jLabel12.setVisible(true);
            c_material.setVisible(true);
            jLabel14.setVisible(true);
            jLabel13.setVisible(false);
            c_conectividade_teclado.setVisible(false);
            jLabel15.setVisible(false);
            c_dimensao.setVisible(false);
            jLabel2.setVisible(false);

        }
    }
    
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jLabel1 = new javax.swing.JLabel();
        c_nome = new javax.swing.JTextField();
        c_preco = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        c_marca = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        c_tipo = new javax.swing.JComboBox<>();
        c_conectividade = new javax.swing.JComboBox<>();
        c_conectividade_teclado = new javax.swing.JTextField();
        c_modelo = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        c_qtd_estoque = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        c_descricao = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        c_dimensao = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        c_material = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        b_cancelar = new javax.swing.JButton();
        b_cadastrar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        c_data = new com.toedter.calendar.JDateChooser();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setTitle("Cadastro Produtos");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setForeground(new java.awt.Color(255, 102, 51));
        jLabel1.setText("Cadastrar: ");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, -1, -1));

        c_nome.setCaretColor(new java.awt.Color(102, 102, 102));
        c_nome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c_nomeActionPerformed(evt);
            }
        });
        getContentPane().add(c_nome, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 90, 180, -1));
        getContentPane().add(c_preco, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 210, 76, -1));

        jLabel3.setForeground(new java.awt.Color(255, 102, 51));
        jLabel3.setText("Preço:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 210, 37, -1));

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setForeground(new java.awt.Color(255, 102, 51));
        jLabel4.setText("Descrição(Opcicional):");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 130, -1));

        jLabel5.setForeground(new java.awt.Color(255, 102, 51));
        jLabel5.setText("Marca:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, 51, -1));

        jLabel6.setForeground(new java.awt.Color(255, 102, 51));
        jLabel6.setText("Modelo:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, 52, -1));

        jLabel7.setForeground(new java.awt.Color(255, 102, 51));
        jLabel7.setText("Quantidade em Estoque:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, -1, -1));
        getContentPane().add(c_marca, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, 153, -1));

        jLabel15.setForeground(new java.awt.Color(255, 102, 51));
        jLabel15.setText("Conectividade do Teclado");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 300, -1, -1));

        c_tipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fone de Ouvido", "Teclado" }));
        c_tipo.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                c_tipoComponentAdded(evt);
            }
        });
        c_tipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c_tipoActionPerformed(evt);
            }
        });
        getContentPane().add(c_tipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, 170, 30));

        c_conectividade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Com fio", "Sem fio" }));
        c_conectividade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c_conectividadeActionPerformed(evt);
            }
        });
        getContentPane().add(c_conectividade, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 300, 150, 20));
        getContentPane().add(c_conectividade_teclado, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 300, 140, 20));
        getContentPane().add(c_modelo, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 170, 150, -1));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens2/tecladotrabalho (1).jpg"))); // NOI18N
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 60, 360, 190));

        c_qtd_estoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c_qtd_estoqueActionPerformed(evt);
            }
        });
        getContentPane().add(c_qtd_estoque, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 260, 90, -1));

        jLabel2.setForeground(new java.awt.Color(255, 102, 0));
        jLabel2.setText("Dimensão:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 340, -1, -1));

        c_descricao.setColumns(20);
        c_descricao.setRows(5);
        c_descricao.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane2.setViewportView(c_descricao);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 300, 260, 60));

        jLabel11.setForeground(new java.awt.Color(255, 102, 51));
        jLabel11.setText("Conectividade do Fone:");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 300, -1, -1));

        jLabel14.setIcon(new javax.swing.ImageIcon("C:\\Users\\Acer\\OneDrive\\Área de Trabalho\\download__1_-removebg-preview.png")); // NOI18N
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 10, 280, 280));

        c_dimensao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c_dimensaoActionPerformed(evt);
            }
        });
        getContentPane().add(c_dimensao, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 340, 190, -1));

        jLabel12.setBackground(new java.awt.Color(0, 0, 0));
        jLabel12.setForeground(new java.awt.Color(255, 102, 51));
        jLabel12.setText("Material:");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 340, 60, -1));

        c_material.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c_materialActionPerformed(evt);
            }
        });
        getContentPane().add(c_material, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 340, 188, -1));

        jLabel8.setForeground(new java.awt.Color(255, 102, 51));
        jLabel8.setText("Nome:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, -1, -1));

        b_cancelar.setText("Cancelar");
        b_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cancelarActionPerformed(evt);
            }
        });
        getContentPane().add(b_cancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 420, 92, 33));

        b_cadastrar.setText("Cadastrar");
        b_cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cadastrarActionPerformed(evt);
            }
        });
        getContentPane().add(b_cadastrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 420, 102, 33));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens2/Fundo Azul Escuro.png"))); // NOI18N
        jLabel10.setText("jLabel10");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -20, 850, 520));

        c_data.setDateFormatString("dd '/' MM '/' y");
        c_data.setMinSelectableDate(new java.util.Date(-62135755087000L));
        getContentPane().add(c_data, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 440, 110, -1));
        c_data.setVisible(false);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void c_nomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c_nomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c_nomeActionPerformed

    private void b_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cancelarActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_b_cancelarActionPerformed

    private void b_cadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cadastrarActionPerformed
if (c_tipo.getSelectedItem().toString().equals("Fone de Ouvido")) {
    try {
        // recebendo e validando dados da interface gráfica.
        String nome = "";
        String tipo = "";
        float preco = 0;
        String descricao = "";
        String marca = "";
        String modelo = "";
        int qtd_estoque = 0;
        String data_cadastro = "";
        String conectividade_do_fone = "";
        String material = "";

        if (this.c_nome.getText().length() < 2 || this.c_nome.getText().length() > 45) {
            throw new Mensagens("Nome deve conter ao menos 2 caracteres e menos de 45 caracteres.");
        } else {
            nome = this.c_nome.getText();
        }
        if (this.c_tipo.getSelectedItem().toString().equals("Fone de Ouvido")) {
            tipo = this.c_tipo.getSelectedItem().toString();
        } else {
            throw new Mensagens("Tipo de produto inválido!");
        }
        try {
            float preco2 = Float.parseFloat(this.c_preco.getText());
            if (preco2 < 0 || preco2 > 50000) {
                throw new Mensagens("O preço não pode ser menor que ZERO ou maior que CINQUENTA MIL!");
            } else {
                preco = preco2;
            }
        } catch (NumberFormatException e) {
            throw new Mensagens("O valor inserido não é um número válido!");
        }
        if (this.c_descricao.getText().length() < 5 || this.c_descricao.getText().length() > 250) {
            throw new Mensagens("Descrição deve conter ao menos 5 caracteres e menos de 250 caracteres.");
        } else {
            descricao = this.c_descricao.getText();
        }
        data_cadastro = LocalDate.now().format(DateTimeFormatter.ofPattern("dd/MM/yyyy"));

        try {
            qtd_estoque = Integer.parseInt(this.c_qtd_estoque.getText());
            if (qtd_estoque < 0) {
                throw new Mensagens("Estoque não pode ser negativo");
            }
        } catch (NumberFormatException e) {
            throw new Mensagens("Quantidade em estoque deve ser um número válido");
        }
        if (this.c_marca.getText().length() < 2 || this.c_marca.getText().length() > 45) {
            throw new Mensagens("Marca deve conter ao menos 2 caracteres e menos de 45 caracteres.");
        } else {
            marca = this.c_marca.getText();
        }
        if (this.c_modelo.getText().length() < 2 || this.c_modelo.getText().length() > 45) {
            throw new Mensagens("Modelo deve conter ao menos 2 caracteres e menos de 45 caracteres.");
        } else {
            modelo = this.c_modelo.getText();
        }
        if (this.c_conectividade.getSelectedItem().toString().length() < 2 || this.c_conectividade.getSelectedItem().toString().length() > 45) {
            throw new Mensagens("Conectividade deve conter ao menos 2 caracteres e menos de 45 caracteres.");
        } else {
            conectividade_do_fone = this.c_conectividade.getSelectedItem().toString();
        }
        if (this.c_material.getText().length() < 2 || this.c_material.getText().length() > 45) {
            throw new Mensagens("Material deve conter ao menos 2 caracteres e menos de 45 caracteres.");
        } else {
            material = this.c_material.getText();
        }

        // envia os dados para o Controlador cadastrar
        if (this.objFone.InsertFoneBD(conectividade_do_fone, material, nome, tipo, preco, descricao, marca, modelo, qtd_estoque, data_cadastro)) {
            JOptionPane.showMessageDialog(rootPane, "Fone de Ouvido Cadastrado com Sucesso!");

            // limpa campos da interface
            this.c_nome.setText("");
            this.c_tipo.setSelectedItem("Fone de Ouvido");
            this.c_preco.setText("");
            this.c_descricao.setText("");
            this.c_marca.setText("");
            this.c_modelo.setText("");
            this.c_qtd_estoque.setText("");
            this.c_data.setDate(null);
            this.c_conectividade.setSelectedItem("");
            this.c_material.setText("");
        }

        System.out.println(this.objFone.getMinhaLista().toString());

    } catch (Mensagens erro) {
        JOptionPane.showMessageDialog(null, erro.getMessage());
    } catch (NumberFormatException erro2) {
        JOptionPane.showMessageDialog(null, "Informe um número.");
    } catch (SQLException ex) {
        Logger.getLogger(Cadastro_Produtos.class.getName()).log(Level.SEVERE, null, ex);
    }
} else if (c_tipo.getSelectedItem().toString().equals("Teclado")) {
    try {
        // recebendo e validando dados da interface gráfica.
        String nome_teclado = "";
        String marca_teclado = "";
        String modelo_teclado = "";
        float preco_teclado = 0;
        int qtd_estoque_teclado = 0;
        String datacadastro_teclado = "";
        String descricao_teclado = "";
        String dimensao_teclado = "";
        String conectividade_teclado = "";
        String tipo_teclado = "";

        if (this.c_nome.getText().length() < 2 || this.c_nome.getText().length() > 45) {
            throw new Mensagens("Nome deve conter ao menos 2 caracteres e menos de 45 caracteres.");
        } else {
            nome_teclado = this.c_nome.getText();
        }
        if (this.c_tipo.getSelectedItem().toString().equals("Teclado")) {
            tipo_teclado = this.c_tipo.getSelectedItem().toString();
        } else {
            throw new Mensagens("Tipo de produto inválido!");
        }
        if (this.c_marca.getText().length() < 2 || this.c_marca.getText().length() > 45) {
            throw new Mensagens("Marca deve conter ao menos 2 caracteres e menos de 45 caracteres.");
        } else {
            marca_teclado = this.c_marca.getText();
        }
        if (this.c_modelo.getText().length() < 2 || this.c_modelo.getText().length() > 45) {
            throw new Mensagens("Modelo deve conter ao menos 2 caracteres e menos de 45 caracteres.");
        } else {
            modelo_teclado = this.c_modelo.getText();
        }
        try {
            float preco2 = Float.parseFloat(this.c_preco.getText());
            if (preco2 < 0 || preco2 > 50000) {
                throw new Mensagens("O preço não pode ser menor que ZERO ou maior que CINQUENTA MIL!");
            } else {
                preco_teclado = preco2;
            }
        } catch (NumberFormatException e) {
            throw new Mensagens("O valor inserido não é um número válido!");
        }
        try {
            qtd_estoque_teclado = Integer.parseInt(this.c_qtd_estoque.getText());
            if (qtd_estoque_teclado < 0) {
                throw new Mensagens("Estoque não pode ser negativo");
            }
        } catch (NumberFormatException e) {
            throw new Mensagens("Quantidade em estoque deve ser um número válido");
        }
        datacadastro_teclado = LocalDate.now().format(DateTimeFormatter.ofPattern("dd/MM/yyyy"));
        if (this.c_descricao.getText().length() < 5 || this.c_descricao.getText().length() > 250) {
            throw new Mensagens("Descrição deve conter ao menos 5 caracteres e menos de 250 caracteres.");
        } else {
            descricao_teclado = this.c_descricao.getText();
        }
        if (this.c_dimensao.getText().length() < 1 || this.c_dimensao.getText().length() > 50) {
            throw new Mensagens("O campo de dimensão deve conter de UM até 50 caracteres!");
        } else {
            dimensao_teclado = this.c_dimensao.getText();
        }
        if (this.c_conectividade_teclado.getText().length() < 1 || this.c_conectividade_teclado.getText().length() > 100) {
            throw new Mensagens("O campo de conectividade deve conter de UM até 50 caracteres!");
        } else {
            conectividade_teclado = this.c_conectividade_teclado.getText();
        }

        // envia os dados para o Controlador cadastrar
        if (this.objTeclado.InsertTecladoBD(dimensao_teclado, conectividade_teclado, nome_teclado, tipo_teclado, preco_teclado, descricao_teclado, marca_teclado, modelo_teclado, qtd_estoque_teclado, datacadastro_teclado)) {
            JOptionPane.showMessageDialog(rootPane, "Teclado Cadastrado com Sucesso!");

            this.c_nome.setText("");
            this.c_marca.setText("");
            this.c_modelo.setText("");
            this.c_preco.setText("");
            this.c_qtd_estoque.setText("");
            this.c_data.setDate(null);
            this.c_descricao.setText("");
            this.c_dimensao.setText("");
            this.c_conectividade_teclado.setText("");
            this.c_tipo.setSelectedItem("Teclado");
        }

        System.out.println(this.objTeclado.getListaTeclado().toString());

    } catch (Mensagens erro) {
        JOptionPane.showMessageDialog(null, erro.getMessage());
    } catch (NumberFormatException erro2) {
        JOptionPane.showMessageDialog(null, "Preencha o campo usando números!");
    } catch (SQLException ex) {
        java.util.logging.Logger.getLogger(Cadastro_Produtos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
}
    }//GEN-LAST:event_b_cadastrarActionPerformed

    private void c_tipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c_tipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c_tipoActionPerformed

    private void c_qtd_estoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c_qtd_estoqueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c_qtd_estoqueActionPerformed

    private void c_tipoComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_c_tipoComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_c_tipoComponentAdded

    private void c_conectividadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c_conectividadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c_conectividadeActionPerformed

    private void c_materialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c_materialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c_materialActionPerformed

    private void c_dimensaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c_dimensaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c_dimensaoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cadastro_Produtos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cadastro_Produtos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cadastro_Produtos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cadastro_Produtos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cadastro_Produtos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_cadastrar;
    private javax.swing.JButton b_cancelar;
    private javax.swing.JComboBox<String> c_conectividade;
    private javax.swing.JTextField c_conectividade_teclado;
    private com.toedter.calendar.JDateChooser c_data;
    private javax.swing.JTextArea c_descricao;
    private javax.swing.JTextField c_dimensao;
    private javax.swing.JTextField c_marca;
    private javax.swing.JTextField c_material;
    private javax.swing.JTextField c_modelo;
    private javax.swing.JTextField c_nome;
    private javax.swing.JTextField c_preco;
    private javax.swing.JTextField c_qtd_estoque;
    private javax.swing.JComboBox<String> c_tipo;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
